{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.23b07a0b707964a8d438.hot-update.js","sources":["webpack:///./services/PerspectiveService.ts"],"sourcesContent":["const LISTEN_RATE = 60;\r\nconst PERSPECTIVE_FACTOR = 1 / 1000;\r\n\r\nexport class PerspectiveService {\r\n    private static instance: PerspectiveService;\r\n    private centerX: number;\r\n    private centerY: number;\r\n    private counter: number;\r\n\r\n    public static getInstance(): PerspectiveService {\r\n        if (!this.instance) {\r\n            this.instance = new PerspectiveService();\r\n        }\r\n\r\n        return this.instance;\r\n    }\r\n\r\n    public init() {\r\n        this.centerX = 0;\r\n        this.centerY = 0\r\n        this.counter = 1;\r\n        this.setCenter();\r\n    }\r\n\r\n    public setCenter(): void {\r\n        const perspectiveWrapper = document.getElementById('perspectiveWrapper');\r\n        const { clientWidth, clientHeight } = perspectiveWrapper;\r\n\r\n        this.centerX = clientWidth / 2;\r\n        this.centerY = clientHeight / 2;\r\n    }\r\n\r\n    public updatePerspective(event: MouseEvent): void {\r\n        const isTimeToUpdate = LISTEN_RATE % this.counter === 0;\r\n\r\n        if (!isTimeToUpdate) {\r\n            this.counter = 1 + (this.counter || 0);\r\n            return;\r\n        }\r\n\r\n        const { clientX, clientY } = event;\r\n        const xAngle = (clientX - this.centerX) * PERSPECTIVE_FACTOR;\r\n        const yAngle = - (clientY - this.centerY) * PERSPECTIVE_FACTOR;\r\n        const perspectiveRecipient = document.getElementById('perspectiveRecipient');\r\n        perspectiveRecipient.style.transform = `rotateX(${yAngle}deg) rotateY(${xAngle}deg)`;\r\n        this.counter = 1;\r\n    }\r\n}"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAeA;AACA;AACA;AACA;AACA;AAnBA;AAAA;AAAA;AAsBA;AADA;AAAA;AAIA;AACA;AACA;AA3BA;AAAA;AAAA;AA8BA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AASA;AACA;AACA;AACA;AACA;AACA;AA3CA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AAZA;AACA;AADA;AAAA;AACA;AADA;;;;A","sourceRoot":""}